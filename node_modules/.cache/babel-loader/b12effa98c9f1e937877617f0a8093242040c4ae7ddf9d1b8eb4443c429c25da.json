{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  __name: 'AccordeonTest',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    // import slide-up-down from \"vue-slide-up-down\";\n    const questionId = ref(0);\n    const showText = id => {\n      questionId.value = id;\n      console.log(questionId);\n    };\n    const list = [{\n      id: 1,\n      title: \"The analysis\",\n      subtitle: \"To take into account on user level data\",\n      items: [{\n        id: 2,\n        text: \"Do you have one user in more than one variant of the same AB test?\"\n      }, {\n        id: 3,\n        text: \"Are you users actually getting the treatment we expect them to get?\"\n      }, {\n        id: 4,\n        text: \"Do we have enough users in our AB test? Are those users representative for the total population?\"\n      }]\n    }, {\n      id: 5,\n      title: \"To take into account on user level data\",\n      subtitle: \"To take into account on user level data\",\n      items: [{\n        id: 6,\n        text: \"Do you have one user in more than one variant of the same AB test?\"\n      }, {\n        id: 7,\n        text: \"Are you users actually getting the treatment we expect them to get?\"\n      }, {\n        id: 8,\n        text: \"Do we have enough users in our AB test? Are those users representative for the total population?\"\n      }]\n    }, {\n      id: 9,\n      title: \"Our data\",\n      subtitle: \"To take into account on user level data\",\n      items: [{\n        id: 10,\n        text: \"Do you have one user in more than one variant of the same AB test?\"\n      }, {\n        id: 11,\n        text: \"Are you users actually getting the treatment we expect them to get?\"\n      }, {\n        id: 12,\n        text: \"Do we have enough users in our AB test? Are those users representative for the total population?\"\n      }]\n    }];\n    const __returned__ = {\n      questionId,\n      showText,\n      list,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","questionId","showText","id","value","console","log","list","title","subtitle","items","text"],"sources":["C:/Users/Vanya/Desktop/test/test/new-project/src/components/AccordeonTest.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"block\" v-for=\"item in list\" :key=\"item.id\">\n            <div class=\"block__header\" @click=\"showText(item.id)\">\n                <div class=\"block__title\">\n                    {{ item.title }}\n                </div>\n                <div class=\"block__svg\">\n                    <svg\n                        width=\"12\"\n                        height=\"8\"\n                        viewBox=\"0 0 12 8\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M1 1L6 6L11 1\"\n                            stroke=\"#0D2A54\"\n                            stroke-width=\"2\"\n                        />\n                    </svg>\n                </div>\n            </div>\n            <slide-up-down  :duration=\"500\" :active=\"item.id === questionId\">\n                <div class=\"block__content content content_hide\">\n                    <div class=\"content__title\">\n                        {{ item.subtitle }}\n                    </div>\n                    <ul class=\"content__list\">\n                        <li\n                            class=\"content__item\"\n                            v-for=\"elem in item.items\"\n                            :key=\"elem.id\"\n                        >\n                            {{ elem.text }}\n                        </li>\n                    </ul>\n                </div>\n            </slide-up-down >\n        </div>\n    </div>\n</template>\n\n<script setup>\n// import slide-up-down from \"vue-slide-up-down\";\nimport { ref } from \"vue\";\nconst questionId = ref(0);\nconst showText = (id) => {\n    questionId.value = id;\n    console.log(questionId);\n}\n\nconst list = [\n    {\n        id: 1,\n        title: \"The analysis\",\n        subtitle: \"To take into account on user level data\",\n        items: [\n            {\n                id: 2,\n                text: \"Do you have one user in more than one variant of the same AB test?\",\n            },\n            {\n                id: 3,\n                text: \"Are you users actually getting the treatment we expect them to get?\",\n            },\n            {\n                id: 4,\n                text: \"Do we have enough users in our AB test? Are those users representative for the total population?\",\n            },\n        ],\n    },\n    {\n        id: 5,\n        title: \"To take into account on user level data\",\n        subtitle: \"To take into account on user level data\",\n        items: [\n            {\n                id: 6,\n                text: \"Do you have one user in more than one variant of the same AB test?\",\n            },\n            {\n                id: 7,\n                text: \"Are you users actually getting the treatment we expect them to get?\",\n            },\n            {\n                id: 8,\n                text: \"Do we have enough users in our AB test? Are those users representative for the total population?\",\n            },\n        ],\n    },\n    {\n        id: 9,\n        title: \"Our data\",\n        subtitle: \"To take into account on user level data\",\n        items: [\n            {\n                id: 10,\n                text: \"Do you have one user in more than one variant of the same AB test?\",\n            },\n            {\n                id: 11,\n                text: \"Are you users actually getting the treatment we expect them to get?\",\n            },\n            {\n                id: 12,\n                text: \"Do we have enough users in our AB test? Are those users representative for the total population?\",\n            },\n        ],\n    },\n];\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n    margin: 32px 8px;\n    border-radius: 8px;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.02),\n        0px 4px 17px rgba(0, 0, 0, 0.14), 0px 4px 22px rgba(0, 0, 0, 0.12);\n    // height: 100vh;\n}\n\n.block {\n}\n\n.content {\n}\n</style>\n"],"mappings":"AA6CA,SAASA,GAAG,QAAQ,KAAK;;;;;;;;IADzB;IAEA,MAAMC,UAAU,GAAGD,GAAG,CAAC,CAAC,CAAC;IACzB,MAAME,QAAQ,GAAIC,EAAE,IAAK;MACrBF,UAAU,CAACG,KAAK,GAAGD,EAAE;MACrBE,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;IAC3B,CAAC;IAED,MAAMM,IAAI,GAAG,CACT;MACIJ,EAAE,EAAE,CAAC;MACLK,KAAK,EAAE,cAAc;MACrBC,QAAQ,EAAE,yCAAyC;MACnDC,KAAK,EAAE,CACH;QACIP,EAAE,EAAE,CAAC;QACLQ,IAAI,EAAE;MACV,CAAC,EACD;QACIR,EAAE,EAAE,CAAC;QACLQ,IAAI,EAAE;MACV,CAAC,EACD;QACIR,EAAE,EAAE,CAAC;QACLQ,IAAI,EAAE;MACV,CAAC;IAET,CAAC,EACD;MACIR,EAAE,EAAE,CAAC;MACLK,KAAK,EAAE,yCAAyC;MAChDC,QAAQ,EAAE,yCAAyC;MACnDC,KAAK,EAAE,CACH;QACIP,EAAE,EAAE,CAAC;QACLQ,IAAI,EAAE;MACV,CAAC,EACD;QACIR,EAAE,EAAE,CAAC;QACLQ,IAAI,EAAE;MACV,CAAC,EACD;QACIR,EAAE,EAAE,CAAC;QACLQ,IAAI,EAAE;MACV,CAAC;IAET,CAAC,EACD;MACIR,EAAE,EAAE,CAAC;MACLK,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE,yCAAyC;MACnDC,KAAK,EAAE,CACH;QACIP,EAAE,EAAE,EAAE;QACNQ,IAAI,EAAE;MACV,CAAC,EACD;QACIR,EAAE,EAAE,EAAE;QACNQ,IAAI,EAAE;MACV,CAAC,EACD;QACIR,EAAE,EAAE,EAAE;QACNQ,IAAI,EAAE;MACV,CAAC;IAET,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}